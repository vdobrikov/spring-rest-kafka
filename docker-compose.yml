version: '2'
services:

  zookeeper:
    image: fogsyio/zookeeper:3.4.13
    ports:
      - "2181:2181"

  kafka:
    image: fogsyio/kafka:2.2.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  db:
    image: ubuntu/mysql:8.0-21.10_beta
    environment:
      MYSQL_ROOT_PASSWORD: ch@ngeM3
      MYSQL_DATABASE: test_db
      MYSQL_USER: test
      MYSQL_PASSWORD: ch@ngeM3
    ports:
      - "3306:3306"

  rest-consumer:
    build:
      context: ./
      dockerfile: ./Dockerfile-rest-consumer
    depends_on:
      - kafka
    volumes:
      - ./application.properties:/app/config/application.properties
    labels:
      traefik.enable: true
      traefik.http.routers.rest-consumer.rule: Host(`localhost`)

  kafka-consumer:
    build:
      context: ./
      dockerfile: ./Dockerfile-kafka-consumer
    depends_on:
      - kafka
      - db
    volumes:
      - ./application.properties:/app/config/application.properties

  gateway:
    image: traefik:2.5.4
    depends_on:
      - rest-consumer
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker
      - --providers.docker.exposedByDefault=false
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.http.routers.dash.rule: Host(`dash.localhost`)
      traefik.http.routers.dash.service: api@internal
